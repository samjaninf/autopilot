---
name: run-tests

on:
  push:
    paths-ignore:
      - "docker/test/**"
  pull_request:

jobs:
  test:
    runs-on: ubuntu-20.04

    services:
      mysql:
        image: bitnami/mariadb:10.4
        env:
          MARIADB_USER: autopilot
          MARIADB_DATABASE: autopilot
          MARIADB_PASSWORD: secret
          MARIADB_ROOT_PASSWORD: supersecret
        ports:
          - 3307:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      APP_ENV: testing
      APP_KEY: base64:V78KNl8AZXSQ3p7Kapd8Gr/i7D1hJHbB72vsXSVuG1I=
      DB_PORT: 3307

    steps:
      - uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache/files
          key: composer-${{ hashFiles('composer.json') }}

      - name: Install pip packages
        run: sudo pips install ansible-lint && sudo pip install yamllint

      - name: Run Yaml lint on ansible folder
        run: sudo yamllint -c tests/yamllint.yml ansible/

      - name: Run Ansible lint on ansible folder
        run: sudo ansible-lint -v --force-color ansible/

      - name: Install dependencies
        run: |
          sudo docker ps
          composer config http-basic.nova.laravel.com ${{ secrets.NOVA_USERNAME }} ${{ secrets.NOVA_PASSWORD }}
          composer install --prefer-dist --no-interaction --no-suggest
          php artisan migrate --seed

      - name: Execute tests
        run: |
          sudo modprobe ip6table_filter
          docker-compose up -d
          TEST_WEB_IP=172.25.1.1 TEST_LB_IP=172.25.1.2 php artisan test

      - name: "Failure: dump tasks"
        if: failure()
        run: |
          php artisan task:debug

      - name: "Failure: dump logs"
        if: failure()
        run: |
          cat storage/logs/laravel.log

      - name: "Failure: dump webserver logs"
        if: failure()
        run: |
          docker exec autopilot-test cat /opt/sitepilot/services/olsws/logs/error.log

      - name: Start SSH via Ngrok
        if: failure()
        run: curl -sL https://gist.githubusercontent.com/retyui/7115bb6acf151351a143ec8f96a7c561/raw/7099b9db76729dc5761da72aa8525f632d8875c9/debug-github-actions.sh | bash
        env:
          NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
          USER_PASS: ${{ secrets.SSH_USER_PASSWORD }}

      - name: Don't kill instace
        if: failure()
        run: sleep 1h

  deploy:
    runs-on: ubuntu-20.04
    needs: [test]
    steps:
      - uses: actions/checkout@v2

      - name: Build and deploy Docker container
        run: |
          docker build . --tag sitepilot/autopilot:$GITHUB_SHA
          if [[ ${GITHUB_REF##*/} = "master" ]]; then export DOCKER_TAG=latest; else export DOCKER_TAG=${GITHUB_REF##*/}; fi
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag sitepilot/autopilot:${GITHUB_SHA} sitepilot/autopilot:$DOCKER_TAG
          docker push sitepilot/autopilot:$DOCKER_TAG
